//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HermesLicencingInterface.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Web.Mvc;

    public partial class TEmpresa
    {
        public TEmpresa()
        {
            this.TLicenca = new HashSet<TLicenca>();
        }

        public int idEmpresa { get; set; }

        [StringLength(200)]
        [Display(Name = "Nome: ")]
        public string nome { get; set; }

        [StringLength(200)]
        [Display(Name = "Morada: ")]
        public string morada { get; set; }

        [Display(Name = "Email de Contacto: ")]
        [EmailAddress]
        [StringLength(50, MinimumLength = 5)]
        public string email { get; set; }

        [StringLength(9)]
        [Display(Name = "Numero Identificação Fiscal: ")]
        public string nif { get; set; }

        [StringLength(15)]
        [Display(Name = "Telefone de Contacto: ")]
        public string contacto { get; set; }

        [Display(Name = "Número máximo de licenças: ")]
        public int maxRegs { get; set; }

        public virtual ICollection<TLicenca> TLicenca { get; set; }

        public static IEnumerable<TEmpresa> All()
        {
            var db = new Models.LicencingDBEntities();
            return db.Set<TEmpresa>();
        }

        public static TEmpresa GetById(int id)
        {

            var db = new Models.LicencingDBEntities();

            var query = db.TEmpresa.Where(c => c.idEmpresa == id).Select(c => c);
            return query.ToList().First();
        }

        public static int Update(TEmpresa emp)
        {
            int ret = 0;
            var db = new Models.LicencingDBEntities();

            var query = db.TEmpresa.Select(c => c);
            var empresas = query.ToList();

            if (!ValidateData(emp))
                return 2;

            foreach (TEmpresa e in empresas)
            {
                if (emp.idEmpresa == e.idEmpresa)
                {
                    e.idEmpresa = emp.idEmpresa;
                    e.nome = emp.nome;
                    e.morada = emp.morada;
                    e.email = emp.email;
                    e.nif = emp.nif;
                    e.contacto = emp.contacto;

                    db.SaveChanges();
                    ret = 1;
                    break;
                }
            }
            return ret;
        }

        public static int AddCompany(TEmpresa emp)
        {
            var db = new Models.LicencingDBEntities();

            if (!ValidateData(emp))
                return 2;

            db.TEmpresa.Add(emp);
            db.SaveChanges();

            return emp.idEmpresa;
        }

        public static bool ValidateData(TEmpresa emp)
        {
            bool ret = true;

            if (emp.nome == null)
                return false;
            if (emp.morada == null)
                return false;
            if (emp.nif == null)
                return false;
            if (emp.email == null)
                return false;
            if (emp.contacto == null)
                return false;

            return ret;
        }
    }
}
